{"version":3,"sources":["services/UserService.js","modules/common/services/BitcoinService.js","modules/common/views/HomePage.jsx","modules/contact/ContactService.js","modules/contact/actions.js","modules/contact/cmps/ContactPreview.jsx","modules/contact/cmps/ContactList.jsx","modules/contact/cmps/ContactFilter.jsx","modules/contact/views/ContactPage.jsx","modules/contact/views/ContactDetails.jsx","modules/contact/views/ContactEdit.jsx","modules/common/cmps/Header.jsx","App.jsx","serviceWorker.js","modules/contact/reducers.js","store.js","index.js"],"names":["getUser","name","coins","moves","signup","addMove","contact","amount","getRate","a","async","Axios","get","res","data","HomePage","state","user","rate","this","className","BitcoinService","UserService","setState","React","Component","getContacts","filterBy","Promise","resolve","reject","term","contactsToReturn","contacts","toLocaleLowerCase","filter","includes","phone","email","sort","b","getContactById","id","find","_id","deleteContact","index","findIndex","splice","saveContact","c","_updateContact","length","txt","possible","i","charAt","Math","floor","random","_makeId","push","_addContact","getEmptyContact","setCurrContact","type","loadCurrContact","dispatch","ContactService","setContacts","updateContact","removeContact","ContactPreview","map","idx","to","key","ContactFilter","handleFilter","onChange","ev","target","value","placeholder","ContactPage","val","props","loadContacts","ContactList","mapDispatchToProps","connect","ContactDetails","match","params","currContact","ContactEdit","isNew","field","prevState","preventDefault","goToContactPage","history","onClick","onSubmit","savedContact","Header","App","exact","path","component","Boolean","window","location","hostname","INITIAL_STATE","rootReducer","combineReducers","action","slice","store","createStore","applyMiddleware","thunk","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dab907e0.chunk.js","sourcesContent":["export default {\r\n    getUser,\r\n    signup,\r\n    addMove\r\n}\r\n\r\nfunction getUser() {\r\n    return {\r\n        name: \"Emma Smith\",\r\n        coins: 100,\r\n        moves: []\r\n    }\r\n}\r\n\r\nfunction signup(name) {\r\n\r\n}\r\n\r\nfunction addMove(contact, amount) {\r\n\r\n}","import Axios from \"axios\";\r\n\r\nexport default {\r\n    getRate\r\n}\r\n\r\nasync function getRate(coins) {\r\n    const res = await Axios.get(`https://blockchain.info/tobtc?currency=USD&value=${coins}`)\r\n    return res.data\r\n}","import React from 'react'\r\nimport UserService from '../../../services/UserService';\r\nimport BitcoinService from '../services/BitcoinService'\r\n\r\n\r\nexport default class HomePage extends React.Component {\r\n    state = {\r\n        user: null,\r\n        rate: null\r\n    }\r\n    render() {\r\n        const { user, rate } = this.state\r\n        if (rate && user) return (\r\n            <section className=\"home-page\">\r\n                <h1>Hello, {user.name}</h1>\r\n                <h3>Coins: {user.coins}</h3>\r\n                <h3>BTC: {rate}</h3>\r\n            </section>\r\n        )\r\n        else return (\r\n            <div></div>\r\n        )\r\n    }\r\n    async componentDidMount() {\r\n        const rate = await BitcoinService.getRate(1);\r\n        const user = UserService.getUser();\r\n        this.setState({ user, rate })\r\n    }\r\n}","export default {\n  getContacts,\n  getContactById,\n  deleteContact,\n  saveContact,\n  getEmptyContact\n}\n\n\n\nconst contacts = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\"\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\", \n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\"\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\", \n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\"\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\", \n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\"\n  },\n  {\n    \"_id\": \"5a566402abce24c6bfe4699d\", \n    \"name\": \"Dominique Soto\",\n    \"email\": \"dominiquesoto@renovize.com\",\n    \"phone\": \"+1 (807) 551-3258\"\n  },\n  {\n    \"_id\": \"5a566402a6499c1d4da9220a\", \n    \"name\": \"Shana Pope\",\n    \"email\": \"shanapope@renovize.com\",\n    \"phone\": \"+1 (970) 527-3082\"\n  },\n  {\n    \"_id\": \"5a566402f90ae30e97f990db\", \n    \"name\": \"Faulkner Flores\",\n    \"email\": \"faulknerflores@renovize.com\",\n    \"phone\": \"+1 (952) 501-2678\"\n  },\n  {\n    \"_id\": \"5a5664027bae84ef280ffbdf\", \n    \"name\": \"Holder Bean\",\n    \"email\": \"holderbean@renovize.com\",\n    \"phone\": \"+1 (989) 503-2663\"\n  },\n  {\n    \"_id\": \"5a566402e3b846c5f6aec652\", \n    \"name\": \"Rosanne Shelton\",\n    \"email\": \"rosanneshelton@renovize.com\",\n    \"phone\": \"+1 (968) 454-3851\"\n  },\n  {\n    \"_id\": \"5a56640272c7dcdf59c3d411\", \n    \"name\": \"Pamela Nolan\",\n    \"email\": \"pamelanolan@renovize.com\",\n    \"phone\": \"+1 (986) 545-2166\"\n  },\n  {\n    \"_id\": \"5a5664029a8dd82a6178b15f\", \n    \"name\": \"Roy Cantu\",\n    \"email\": \"roycantu@renovize.com\",\n    \"phone\": \"+1 (929) 571-2295\"\n  },\n  {\n    \"_id\": \"5a5664028c096d08eeb13a8a\", \n    \"name\": \"Ollie Christian\",\n    \"email\": \"olliechristian@renovize.com\",\n    \"phone\": \"+1 (977) 419-3550\"\n  },\n  {\n    \"_id\": \"5a5664026c53582bb9ebe9d1\", \n    \"name\": \"Nguyen Walls\",\n    \"email\": \"nguyenwalls@renovize.com\",\n    \"phone\": \"+1 (963) 471-3181\"\n  },\n  {\n    \"_id\": \"5a56640298ab77236845b82b\",\n \n    \"name\": \"Glenna Santana\",\n    \"email\": \"glennasantana@renovize.com\",\n    \"phone\": \"+1 (860) 467-2376\"\n  },\n  {\n    \"_id\": \"5a56640208fba3e8ecb97305\", \n    \"name\": \"Malone Clark\",\n    \"email\": \"maloneclark@renovize.com\",\n    \"phone\": \"+1 (818) 565-2557\"\n  },\n  {\n    \"_id\": \"5a566402abb3146207bc4ec5\", \n    \"name\": \"Floyd Rutledge\",\n    \"email\": \"floydrutledge@renovize.com\",\n    \"phone\": \"+1 (807) 597-3629\"\n  },\n  {\n    \"_id\": \"5a56640298500fead8cb1ee5\", \n    \"name\": \"Grace James\",\n    \"email\": \"gracejames@renovize.com\",\n    \"phone\": \"+1 (959) 525-2529\"\n  },\n  {\n    \"_id\": \"5a56640243427b8f8445231e\", \n    \"name\": \"Tanner Gates\",\n    \"email\": \"tannergates@renovize.com\",\n    \"phone\": \"+1 (978) 591-2291\"\n  },\n  {\n    \"_id\": \"5a5664025c3abdad6f5e098c\", \n    \"name\": \"Lilly Conner\",\n    \"email\": \"lillyconner@renovize.com\",\n    \"phone\": \"+1 (842) 587-3812\"\n  }\n];\n\nfunction sort(arr) {\n  return arr.sort( (a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1;\n    }\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1;\n    }\n\n    return 0;\n  })\n}\n\nfunction getContacts (filterBy = null) {\n  return new Promise((resolve, reject) => { \n    var contactsToReturn = contacts;\n    if (filterBy && filterBy.term) {\n      contactsToReturn = filter(filterBy.term)\n    }\n    resolve(sort(contactsToReturn))\n  })\n}\n\nfunction getContactById (id) {\n    return new Promise((resolve, reject) => {\n      const contact = contacts.find( contact => contact._id === id)\n      contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\n    })\n}\n\nfunction deleteContact(id) {\n  return new Promise((resolve, reject) => { \n    const index = contacts.findIndex( contact => contact._id === id)\n    if (index !== -1) {\n      contacts.splice(index, 1)\n    }\n\n    resolve(contacts)\n  })\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => { \n    const index = contacts.findIndex( c => contact._id === c._id)\n    if (index !== -1) {\n      contacts[index] = contact\n    }\n    resolve(contact)\n  })\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => { \n    contact._id = _makeId()\n    contacts.push(contact)\n    resolve(contact)\n  })\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact)\n}\n\nfunction getEmptyContact() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  }\n}\n\nfunction filter (term) {\n  term = term.toLocaleLowerCase()\n  return contacts.filter( contact => {\n    return contact.name.toLocaleLowerCase().includes(term) ||\n           contact.phone.toLocaleLowerCase().includes(term) ||\n           contact.email.toLocaleLowerCase().includes(term)\n  })\n}\n\n\n\nfunction _makeId(length = 10) {\n  var txt = ''\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (var i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return txt\n}","import ContactService from './ContactService'\r\n\r\nconst setCurrContact = (contact) => {\r\n    return { type: 'SET_CURR_CONTACT', contact }\r\n}\r\n\r\nexport const loadCurrContact = (id) => {\r\n    return async (dispatch) => {\r\n        const contact = await ContactService.getContactById(id)\r\n        return dispatch(setCurrContact(contact))\r\n    }\r\n}\r\n\r\nconst setContacts = (contacts) => {\r\n    return { type: 'SET_CONTACTS', contacts }\r\n}\r\n\r\nexport const loadContacts = (filter) => {\r\n    return async (dispatch) => {\r\n        const contacts = await ContactService.getContacts(filter)\r\n        return dispatch(setContacts(contacts))\r\n    }\r\n}\r\n\r\nconst updateContact = (contact) => {\r\n    return {type: 'SAVE_CONTACT', contact}\r\n}\r\n\r\nexport const saveContact = (contact) => {\r\n    return async (dispatch) => {\r\n        const savedContact = await ContactService.saveContact(contact)\r\n        return dispatch(updateContact(savedContact))\r\n    }\r\n}\r\n\r\nconst removeContact = (id) => {\r\n    return {type: 'DELETE_CONTACT', id}\r\n}\r\n\r\nexport const deleteContact = (id) => {\r\n    return async (dispatch) => {\r\n        await ContactService.deleteContact(id)\r\n        return dispatch(removeContact(id))\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function ContactPreview({ contact }) {\r\n    return <h3>{contact.name}</h3>\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport ContactPreview from './ContactPreview'\r\n\r\nexport default function ({ contacts }) {\r\n    return (\r\n        <section className=\"contact-list flex-center column\">\r\n            {contacts.map((contact, idx) => {\r\n                return (\r\n                    <Link to={`/contact/${contact._id}`} key={idx}>\r\n                        <ContactPreview contact={contact}></ContactPreview>\r\n                    </Link>\r\n                )\r\n            })}\r\n        </section>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function ContactFilter({handleFilter}) {\r\n    return (\r\n        <input type=\"text\" onChange={(ev) => handleFilter(ev.target.value)} placeholder=\"Search\"/>\r\n    )\r\n}","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {loadContacts} from '../actions'\r\nimport { connect } from 'react-redux';\r\n\r\nimport ContactList from '../cmps/ContactList'\r\nimport ContactFilter from '../cmps/ContactFilter';\r\n\r\nclass ContactPage extends React.Component {\r\n    handleFilter = async (val) => {\r\n        const filter = {term: val}\r\n        this.props.loadContacts(filter)\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.props.loadContacts()\r\n    }\r\n\r\n    render() {\r\n        const { contacts } = this.props\r\n        if (contacts) return (\r\n            <section className=\"contact-page flex-center column\">\r\n                <ContactFilter handleFilter={this.handleFilter}></ContactFilter>\r\n                <Link to={'/contact/edit'}>Add new contact</Link>\r\n                <ContactList contacts={contacts}></ContactList>\r\n            </section>\r\n        )\r\n        else return <div>no contacts</div>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contact.contacts\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadContacts\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactPage)","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {loadCurrContact} from '../actions';\r\nimport {connect} from 'react-redux'\r\n\r\nclass ContactDetails extends React.Component {\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        this.props.loadCurrContact(id)\r\n    }\r\n    render() {\r\n        const { contact } = this.props\r\n        if (contact) return (\r\n            <section className=\"contact-details\">\r\n                <div className=\"nav\">\r\n                    <Link to={'/contact'}>Back</Link>\r\n                    <Link to={`/contact/edit/${contact._id}`}>Edit</Link>\r\n                </div>\r\n                <h3>Name: {contact.name}</h3>\r\n                <h3>Phone: {contact.phone}</h3>\r\n                <h3>Email: {contact.email}</h3>\r\n            </section>\r\n        )\r\n        else return <h1>Unknown contact</h1>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.currContact\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadCurrContact\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactDetails)","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {loadCurrContact, saveContact, deleteContact} from '../actions';\r\nimport {connect} from 'react-redux'\r\n\r\nclass ContactEdit extends React.Component {\r\n    state = {\r\n        contact: {\r\n            name: '',\r\n            email: '',\r\n            phone: ''\r\n        },\r\n        isNew: true\r\n    }\r\n    \r\n    async componentDidMount() {\r\n        const id = this.props.match.params.id\r\n        if (id) {\r\n            this.props.loadCurrContact(id)\r\n            this.setState({contact: this.props.contact, isNew: false})\r\n        }\r\n    }\r\n\r\n    updateContact = (ev, field) => {\r\n        const { value } = ev.target;\r\n        this.setState(prevState => {\r\n            return {\r\n                contact: {\r\n                    ...prevState.contact,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    saveContact = async ev => {\r\n        ev.preventDefault()\r\n        await this.props.saveContact(this.state.contact)\r\n        this.goToContactPage()\r\n    }\r\n\r\n    deleteContact = async () => {\r\n        await this.props.deleteContact(this.state.contact._id)\r\n        this.goToContactPage()\r\n    }\r\n\r\n    goToContactPage = () => {\r\n        this.props.history.push('/contact')\r\n    }\r\n\r\n    render() {\r\n        const { contact, isNew } = this.state\r\n        return (\r\n            <section className=\"contact-edit\">\r\n                <div className=\"actions\">\r\n                    <Link to={`/contact/${contact._id}`}>Back</Link>\r\n                    {!isNew && <button onClick={this.deleteContact}>Delete</button>}\r\n                </div>\r\n                <form onSubmit={this.saveContact} className=\"flex-center column\">\r\n                    <label> Name:\r\n                        <input type=\"text\" value={contact.name} onChange={ev => this.updateContact(ev, 'name')} />\r\n                    </label>\r\n                    <label> Phone:\r\n                        <input type=\"text\" value={contact.phone} onChange={ev => this.updateContact(ev, 'phone')} />\r\n                    </label>\r\n                    <label> Email:\r\n                        <input type=\"email\" value={contact.email} onChange={ev => this.updateContact(ev, 'email')} />\r\n                    </label>\r\n                    <button type=\"submit\">Done</button>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contact: state.contact.currContact\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadCurrContact,\r\n    saveContact,\r\n    deleteContact\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactEdit)","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <section className=\"header\">\r\n            <Link to={'/'}>Home</Link>\r\n            <Link to={'/contact'}>Contacts</Link>\r\n        </section>\r\n    )\r\n}","import React from 'react';\nimport './styles/global.scss';\nimport { Route, Switch } from 'react-router-dom'\n\nimport HomePage from './modules/common/views/HomePage'\nimport ContactPage from './modules/contact/views/ContactPage';\nimport ContactDetails from './modules/contact/views/ContactDetails';\nimport ContactEdit from './modules/contact/views/ContactEdit';\nimport Header from './modules/common/cmps/Header'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header></Header>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage}></Route>\n          <Route exact path=\"/contact\" component={ContactPage}></Route>\n          <Route exact path=\"/contact/edit/:id?\" component={ContactEdit}></Route>\n          <Route exact path=\"/contact/:id\" component={ContactDetails}></Route>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const INITIAL_STATE = {\r\n    currContact: null,\r\n    contacts: []\r\n}\r\n\r\nvar idx;\r\n\r\nexport default function contactReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_CURR_CONTACT':\r\n            return {\r\n                ...state,\r\n                currContact: action.contact\r\n            }\r\n        case 'SET_CONTACTS':\r\n            return {\r\n                ...state,\r\n                contacts: action.contacts\r\n            }\r\n        case 'SAVE_CONTACT':\r\n            idx = state.contacts.findIndex(contact => {\r\n                return contact._id === action.contact._id\r\n            })\r\n            return {\r\n                ...state,\r\n                contacts: [\r\n                    ...state.contacts.slice(0, idx),\r\n                    action.contact,\r\n                    ...state.contacts.slice(idx + 1)\r\n                ]\r\n            }\r\n        case 'DELETE_CONTACT':\r\n            idx = state.contacts.findIndex(contact => {\r\n                return contact._id === action.id\r\n            })\r\n            return {\r\n                ...state,\r\n                contacts: [\r\n                    ...state.contacts.slice(0, idx),\r\n                    ...state.contacts.slice(idx + 1)\r\n                ]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport contactReducer from './modules/contact/reducers'\r\n\r\nconst rootReducer = combineReducers({\r\n    contact: contactReducer\r\n})\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { HashRouter as Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory()\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}